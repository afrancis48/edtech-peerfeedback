"""renames read task to notifications

Revision ID: 2a4976a3c46c
Revises: ed750da520e6
Create Date: 2018-04-17 06:30:17.850881

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2a4976a3c46c'
down_revision = 'ed750da520e6'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('notification',
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('read', sa.Boolean(), nullable=True),
    sa.Column('item', sa.String(length=15), nullable=True),
    sa.Column('item_id', sa.Integer(), nullable=True),
    sa.Column('course_name', sa.String(length=150), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('assignment_name', sa.String(length=150), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('notifier_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['notifier_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('created_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_on', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('status', sa.String(length=10), nullable=True),
    sa.Column('course_id', sa.Integer(), nullable=True),
    sa.Column('course_name', sa.String(length=150), nullable=True),
    sa.Column('assignment_id', sa.Integer(), nullable=True),
    sa.Column('assignment_name', sa.String(length=150), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('done_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('pairing_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['pairing_id'], ['pairing.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.drop_table('read_task')
    op.drop_table('review_task')
    op.alter_column('pairing', 'assignment_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('pairing', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('pairing', 'creator_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('pairing', 'grader_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('pairing', 'grader_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('pairing', 'creator_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('pairing', 'course_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('pairing', 'assignment_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_table('review_task',
    sa.Column('created_on', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('status', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('course_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('assignment_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('due_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('done_date', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('pairing_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['pairing_id'], ['pairing.id'], name='review_task_pairing_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='review_task_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='review_task_pkey')
    )
    op.create_table('read_task',
    sa.Column('created_on', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_on', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('read', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('item', sa.VARCHAR(length=15), autoincrement=False, nullable=True),
    sa.Column('item_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('course_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('course_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('assignment_name', sa.VARCHAR(length=150), autoincrement=False, nullable=True),
    sa.Column('assignment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='read_task_user_id_fkey', onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='read_task_pkey')
    )
    op.drop_table('task')
    op.drop_table('notification')
    # ### end Alembic commands ###
